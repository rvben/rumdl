# Pre-commit hooks for rumdl
# Install with:
#   pre-commit install                          # Install commit hooks
#   pre-commit install --hook-type commit-msg   # Install commit-msg hooks
#   pre-commit install --hook-type pre-push     # Install push hooks
# Run manually:
#   pre-commit run --all-files                         # Run commit hooks
#   pre-commit run --hook-stage push --all-files       # Run push hooks
#   pre-commit run --hook-stage commit-msg --commit-msg-filename .git/COMMIT_EDITMSG

fail_fast: true

repos:
  # Conventional Commits validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: []  # Optional: add --strict for stricter validation

  # Rust formatting and linting
  - repo: local
    hooks:
      - id: cargo-fmt
        name: cargo fmt
        entry: cargo fmt --all --
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-clippy
        name: cargo clippy
        entry: make lint
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-test-quick
        name: cargo test (quick)
        entry: make test-pre-commit
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-commit]

      - id: cargo-lock-check
        name: check Cargo.lock is up-to-date
        entry: cargo check --locked
        language: system
        files: ^(Cargo\.(toml|lock)|.*\.rs)$
        pass_filenames: false
        stages: [pre-commit]

  # General file quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$|tests/inline_config_test\.rs$|tests/output_format_integration_tests\.rs$|tests/lsp_editor_integration_tests\.rs$|tests/utils_markdown_edge_cases\.rs$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # Markdown linting using rumdl itself (cargo run)
  - repo: local
    hooks:
      - id: rumdl
        name: rumdl check
        entry: cargo run --quiet -- check
        language: system
        files: \.md$
        exclude: ^(test_tmp|benchmark/test-data|docs/temp|CHANGELOG\.md)
        pass_filenames: true
        require_serial: true

  # Pre-push hooks for comprehensive validation
  - repo: local
    hooks:
      - id: cargo-test-full
        name: cargo test (full suite)
        entry: make test-push
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-push]
        verbose: true

      - id: cargo-lint-full
        name: cargo clippy (all targets)
        entry: mise exec -- make lint
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-push]
        verbose: true

      - id: cargo-doc-check
        name: cargo doc (check)
        entry: mise exec -- cargo doc --no-deps --all-features
        language: system
        types: [rust]
        pass_filenames: false
        stages: [pre-push]
        verbose: true

      - id: cargo-lock-check-push
        name: verify Cargo.lock is committed and up-to-date
        entry: mise exec -- cargo check --locked
        language: system
        files: ^(Cargo\.(toml|lock)|.*\.rs)$
        pass_filenames: false
        stages: [pre-push]
        verbose: true
