name: Build Wheels

on:
  push:
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  # Build for Linux x86_64
  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build wheel
        run: maturin build --release --target x86_64-unknown-linux-gnu --compatibility manylinux2014 --zig

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: wheel-linux-x86_64

  # Build for Linux aarch64
  build-linux-aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build wheel
        run: maturin build --release --target aarch64-unknown-linux-gnu --compatibility manylinux2014 --zig

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: wheel-linux-aarch64

  # Build for Windows x86_64
  build-windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build wheel
        shell: pwsh
        run: maturin build --release --target x86_64-pc-windows-msvc

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: wheel-windows-x86_64

  # Build for macOS x86_64
  build-macos-x86_64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build wheel
        run: maturin build --release --target x86_64-apple-darwin

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: wheel-macos-x86_64

  # Build for macOS aarch64
  build-macos-aarch64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build wheel
        run: maturin build --release --target aarch64-apple-darwin

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: wheel-macos-aarch64

  # Build source distribution
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install maturin[zig]

      - name: Build source distribution
        run: maturin sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.tar.gz
          name: sdist

  upload-to-testpypi:
    needs: [build-linux-x86_64, build-linux-aarch64, build-windows-x86_64, build-macos-x86_64, build-macos-aarch64, sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux-x86_64
          path: target/wheels/linux-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux-aarch64
          path: target/wheels/linux-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-windows-x86_64
          path: target/wheels/windows-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-macos-x86_64
          path: target/wheels/macos-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-macos-aarch64
          path: target/wheels/macos-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: target/wheels/sdist

      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine
          find target/wheels -type f -name "*.whl" -o -name "*.tar.gz" | xargs python -m twine upload --repository testpypi 

  upload-to-pypi:
    needs: [upload-to-testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux-x86_64
          path: target/wheels/linux-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux-aarch64
          path: target/wheels/linux-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-windows-x86_64
          path: target/wheels/windows-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-macos-x86_64
          path: target/wheels/macos-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheel-macos-aarch64
          path: target/wheels/macos-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: target/wheels/sdist

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine
          find target/wheels -type f -name "*.whl" -o -name "*.tar.gz" | xargs python -m twine upload